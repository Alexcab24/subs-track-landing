---
type SubscriptionStatus = "active" | "cancelled" | "pending";

interface Subscription {
    name: string;
    price: number;
    nextPayment: string;
    status: SubscriptionStatus;
    icon: string;
}

// Example data
const subscriptions: Subscription[] = [
    {
        name: "Netflix",
        price: 15.99,
        nextPayment: "2024-04-15",
        status: "active",
        icon: "ðŸ“º",
    },
    {
        name: "Spotify",
        price: 9.99,
        nextPayment: "2024-04-10",
        status: "active",
        icon: "ðŸŽµ",
    },
];

const getStatusColor = (status: SubscriptionStatus) => {
    const colors = {
        active: "bg-green-100 text-green-800",
        cancelled: "bg-red-100 text-red-800",
        pending: "bg-yellow-100 text-yellow-800",
    } as const;
    return colors[status];
};
---

<div class="bg-white rounded-lg shadow">
    <div class="p-6 border-b border-gray-200">
        <div class="flex justify-between items-center">
            <h2 class="text-lg font-medium text-gray-900">
                Your Subscriptions
            </h2>
            <button
                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-bold rounded-lg text-[#192a56] bg-[#FFD700] hover:bg-[#E6C84F] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
            >
                <span class="mr-2">+</span>
                Add Subscription
            </button>
        </div>
    </div>

    <div class="divide-y divide-gray-200">
        {/* Real subscriptions */}
        {
            subscriptions.map((sub) => (
                <div class="p-6 flex items-center justify-between hover:bg-gray-50 transition-colors">
                    <div class="flex items-center">
                        <span class="text-2xl mr-4">{sub.icon}</span>
                        <div>
                            <h3 class="text-sm font-medium text-gray-900">
                                {sub.name}
                            </h3>
                            <p class="text-sm text-gray-500">
                                Next payment:{" "}
                                {new Date(sub.nextPayment).toLocaleDateString()}
                            </p>
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm font-medium text-gray-900">
                            ${sub.price}/mo
                        </span>
                        <span
                            class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(sub.status)}`}
                        >
                            {sub.status === "active"
                                ? "Active"
                                : sub.status === "cancelled"
                                  ? "Cancelled"
                                  : "Pending"}
                        </span>
                    </div>
                </div>
            ))
        }

        {/* Skeleton loaders */}
        {
            [1, 2, 3].map((_, i) => (
                <div class="p-6 flex items-center justify-between">
                    <div class="flex items-center">
                        <div class="w-8 h-8 bg-gray-200 rounded animate-pulse mr-4" />
                        <div>
                            <div class="h-4 w-32 bg-gray-200 rounded animate-pulse" />
                            <div class="h-3 w-24 bg-gray-100 rounded mt-2 animate-pulse" />
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <div class="h-4 w-16 bg-gray-200 rounded animate-pulse" />
                        <div class="h-4 w-16 bg-gray-200 rounded animate-pulse" />
                    </div>
                </div>
            ))
        }
    </div>
</div>
